
[isort]
default_section = THIRDPARTY
force_grid_wrap = 0
force_single_line = 1
import_heading_firstparty = First-party
import_heading_localfolder = Local
import_heading_stdlib = Standard library
import_heading_thirdparty = Third-party
known_first_party =
    pyflexplot
    srtools
    srutils
    words
known_standard_library =
known_third_party =
    click
    numpy
    matplotlib
line_length = 88

[flake8]
exclude = docs
max-line-length = 88
ignore =
    E203, # Allow whitespace before ':' (see https://github.com/PyCQA/pycodestyle/issues/373)
	F811, # "Redefinition unused" (incompatible with typing.overload)
    I002, # Don't check for isort configuration
    W503, # Allow line break before binary operator (PEP 8-compatible)

[pydocstyle]
# SR_TODO Re-enable some errors and fix the code accordingly
ignore =
    D101, # "Missing docstring in public class"
    D102, # "Missing docstring in public method"
    D103, # "Missing docstring in public function"
    D105, # "Missing docstring in magic method"
    D107, # "Missing docstring in __init__"
    D200, # "One-line docstring should fit on one line with quotes"
    D202, # "No blank lines allowed after function docstring"
    D203, # "1 blank line required before class docstring"
    D212, # "Multi-line docstring summary should start at the first line"
    D213, # "Multi-line docstring summary should start at the second line"
    D401, # "First line should be in imperative mood"
    D406, # "Section name should end with a newline"
    D407, # "Missing dashed underline after section"

[pylint]
# Defaults: (http://pylint-messages.wikidot.com/messages:c0103)
# argument-rgx  = [a-z_][a-z0-9_]{2,30}$
# attr-rgx      = [a-z_][a-z0-9_]{2,30}$
# function-rgx  = [a-z_][a-z0-9_]{2,30}$
# method-rgx    = [a-z_][a-z0-9_]{2,30}$
# variable-rgx  = [a-z_][a-z0-9_]{2,30}$
# class-rgx     = [A-Z_][a-zA-Z0-9]+$
# const-rgx     = (([A-Z_][A-Z0-9_]*)|(__.*__))$
# module-rgx    = (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
argument-rgx  = ^[a-z_][a-z0-9_]{,30}$
attr-rgx      = ^[a-z_][a-z0-9_]{,30}$
function-rgx  = ^[a-z_][a-z0-9_]{,30}$
method-rgx    = ^[a-z_][a-z0-9_]{,30}$
variable-rgx  = ^[a-z_][a-z0-9_]{,30}$
class-rgx     = ^[A-Z_][a-zA-Z0-9]+$
const-rgx     = ^(([A-Z_][A-Z0-9_]*)|(__.*__))$
module-rgx    = ^(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
inlinevar-rgx = ^[A-Za-z_][A-Za-z0-9_]*$
# Ignored errors/warnings
ignore = C0330
# C0330: "Wrong hanging indentation before block (add 4 spaces)."

[pytest]
collect_ignore = ["setup.py"]
testpaths = tests
addopts =
    -s
    -rsf
    --color=no
    --pdbcls=IPython.terminal.debugger:TerminalPdb
	--tb=short
    # --cov
    # --mypy

# TODO add pydocstyle & mccabe
[tox]
envlist =
    py37
    flake8
    mypy
    # pylint

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
install_command =
    pip install -U {opts} {packages}
deps =
    pytest
    # pytest-cov
    # pytest-mypy
# To use pinned package versions, create a requirements.txt:
#    -r{toxinidir}/requirements.txt
commands =
    pytest --basetemp={envtmpdir} --junitxml=junit-{envname}.xml

[testenv:flake8]
deps = flake8
commands = flake8 src tests

[testenv:mypy]
deps = mypy
commands = mypy src

[testenv:pylint]
deps = pylint
commands = pylint --rcfile=tox.ini src
