
[isort]
default_section = THIRDPARTY
force_grid_wrap = 0
force_single_line = 1
import_heading_firstparty = First-party
import_heading_localfolder = Local
import_heading_stdlib = Standard library
import_heading_thirdparty = Third-party
known_first_party =
    pyflexplot
    srtools
    srutils
    words
known_standard_library =
known_third_party =
    click
    numpy
    matplotlib
line_length = 88
order_by_type = false

[flake8]
exclude = docs
max-line-length = 88
ignore =
    E203, # whitespace before char -- e.g., `a[:, :-1]`; see https://github.com/PyCQA/pycodestyle/issues/373
	F811, # redefinition of unused [...] -- incompatible with typing.overload
    I002, # no configuration found (.isort.cfg or [isort] in configs)
    W503, # line break occurred before a binary operator -- PEP 8-compatible
    E741, # ambiguous variable name -- e.g., `l`

[pydocstyle]
# SR_TODO Re-enable some errors and fix the code accordingly
ignore =
    D101, # Missing docstring in public class
    D102, # Missing docstring in public method
    D103, # Missing docstring in public function
    D105, # Missing docstring in magic method
    D107, # Missing docstring in __init__
    D200, # One-line docstring should fit on one line with quotes
    D202, # No blank lines allowed after function docstring
    D203, # 1 blank line required before class docstring
    D212, # Multi-line docstring summary should start at the first line
    D213, # Multi-line docstring summary should start at the second line
    D401, # First line should be in imperative mood
    D406, # Section name should end with a newline
    D407, # Missing dashed underline after section

[pylint]
argument-rgx  = ^[a-z_][a-z0-9_]{,40}$
attr-rgx      = ^[a-z_][a-z0-9_]{,40}$
function-rgx  = ^[a-z_][a-z0-9_]{,40}$
method-rgx    = ^[a-z_][a-z0-9_]{,40}$
variable-rgx  = ^[a-z_][a-z0-9_]{,40}$
class-rgx     = ^[A-Z_][a-zA-Z0-9]+$
const-rgx     = ^(([a-z_][a-z0-9_]*)|([A-Z_][A-Z0-9_]*)|(__[a-zA-Z0-9]+__))$
module-rgx    = ^(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
inlinevar-rgx = ^[A-Za-z_][A-Za-z0-9_]*$
# Defaults: (http://pylint-messages.wikidot.com/messages:c0103)
#   argument-rgx  = [a-z_][a-z0-9_]{2,30}$
#   attr-rgx      = [a-z_][a-z0-9_]{2,30}$
#   function-rgx  = [a-z_][a-z0-9_]{2,30}$
#   method-rgx    = [a-z_][a-z0-9_]{2,30}$
#   variable-rgx  = [a-z_][a-z0-9_]{2,30}$
#   class-rgx     = [A-Z_][a-zA-Z0-9]+$
#   const-rgx     = (([A-Z_][A-Z0-9_]*)|(__.*__))$
#   module-rgx    = (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
disable =
    C0115, # Missing class docstring
    C0116, # Missing function or method docstring
    C0301, # Line too long (*/1000) (line-too-long)
    C0330, # Wrong hanging indentation before block (add 4 spaces)
    R0201, # Method could be a function (no-self-use)
    R0903, # Too few public methods (*/2) (too-few-public-methods)
    R1705, # Unnecessary "elif" after "return" (no-else-return)
    R1720, # Unnecessary "elif" after "raise" (no-else-raise)
    R1724, # Unnecessary "elif" after "continue" (no-else-continue)
    W0715, # Exception arguments suggest string formatting might be intended (raising-format-tuple)
    W0707, # Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
    W1116, # Second argument of isinstance is not a type (isinstance-second-argument-not-valid-type)
ignored-modules =
    cartopy,  # prevent E1101 (no-member) (for PlateCarree)
    netCDF4,  # prevent E1101 (no-member)
    pydantic,  # prevent  E0611 (no-name-in-module)
    pydantic.fields,  # prevent  E0611 (no-name-in-module)

[pytest]
testpaths = tests
addopts =
    -s
    -rsf
    --color=no
    --pdbcls=IPython.terminal.debugger:TerminalPdb
	--tb=short
    # --mypy
    --cov=pyflexplot
	--cov=srutils
	--cov=words

# TODO add pydocstyle & mccabe
[tox]
envlist =
    py37
    flake8
    mypy
    pylint

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
install_command =
    pip install -U {opts} {packages}
deps =
    pytest
    pytest-cov
#   pytest-mypy
# To use pinned package versions, create a requirements.txt:
#    -r{toxinidir}/requirements.txt
commands =
    pytest --basetemp={envtmpdir} --junitxml=junit-{envname}.xml

[testenv:flake8]
deps = flake8
commands = flake8 src tests

[testenv:mypy]
deps = mypy
# Issue: Files in tests not found
# Reason: Recursive file discovery in mypy broken
# See https://github.com/python/mypy/issues/6385
# commands = mypy src tests
commands = mypy src

[testenv:pylint]
deps = pylint
commands = pylint --rcfile=tox.ini src
ignore-imports = yes
