
[metadata]
name = pyflexplot
version = 0.3.1
description = PyFlexPlot contains Python scripts to plot FLEXPART NetCDF output
description-file =
    README.rst
    HISTORY.rst
author = Stefan Ruedisuehli
author_email = stefan.ruedisuehli@env.ethz.ch
keywords = pyflexplot
url = https://github.com/ruestefa/pyflexplot
classifiers =
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Developers
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7

[options]
# Auto-detect all packages in `src`, e.g., `pyflexplot = src/pyflexplot`
package_dir =
    = src
packages = find:
include_package_data = True
test_suite =
    tests
requires-python = >= 3.7
zip_safe = False
setup_requires =
install_requires =
    attrs
    Cartopy # Non-Python dependencies: geos, proj (CSCS: `module load geos proj`)
    Click >= 6.0
    click-config-file
    geopy
    matplotlib
    netCDF4
    numpy
    pillow >= 6.2.0
    scipy
test_requires =
    pytest

[options.packages.find]
where = src

[options.entry_points]
console_scripts =
    pyflexplot = pyflexplot.cli:cli
    crop-netcdf = srtools.crop_netcdf:main

[bdist_wheel]
universal = 1

# [bumpversion]
# Moved to ``.bumpversion.cfg`` because bumpversion rewrites its setup file,
# which leads to some format changes and the removal of all comments (!).

[flake8]
exclude = docs
max-line-length = 88
ignore =
    E203, # Allow whitespace before ':'
          # See https://github.com/PyCQA/pycodestyle/issues/373
    W503, # Allow line break before binary operator (PEP 8-compatible)

[aliases]
test = pytest

[tool:pytest]
collect_ignore = ["setup.py"]
testpaths = tests
addopts = -s -rs

[tox:tox]
envlist = 
    py37
    flake8

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
install_command =
    pip install -U {opts} {packages}
deps =
    pytest
# If you want tox to use pinned package versions, create a requirements.txt
# (`pipenv freeze`) and uncomment the following line:
#    -r{toxinidir}/requirements.txt
commands =
    pytest --basetemp={envtmpdir} --junitxml=junit-{envname}.xml

[testenv:flake8] 
basepython = python
deps = flake8
commands = flake8 src tests

